# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17yrHgpISPnd6PUonIJS1PG-JLh1Pc8Pw
"""



"""# New Section"""

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

from keras.models import load_model
from keras.preprocessing import image
model = load_model('model_1.h5', custom_objects={'softmax_v2': tf.nn.softmax})
#classifier.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

custom_objects = {"weibull_loglik_discrete": weibull_loglik_discrete,"activate":activate})

from keras.preprocessing import image
import numpy 
import numpy as np
image_path="â€ª6.png"
img_height=28
img_width=28
test_image= image.load_img('5.png', target_size = (img_width, img_height))
#test_image = test_image[:,:,0]
test_image=np.mean(test_image, -1)
test_image = image.img_to_array(test_image)
test_image = numpy.expand_dims(test_image, axis = 0)
test_image = test_image.reshape(1,img_width, img_height,-1)
result = model.predict(test_image)
print(np.argmax(result,axis=1))